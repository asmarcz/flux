fn inc<'a>( l0: {int | true}, l1: &'a mut l0
          ; n: own(l1)
          ) ret k( l2: {int | V == l0 + 1}, l3: &'a mut l2, l4: {() | true}
                 ; n: own(l3)
                 ; own(l4)
                 ) =
  *n := *n + 1;
  let r = alloc(1);
  r := ();
  jump k(r)
